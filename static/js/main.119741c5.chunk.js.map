{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","visibleGoods","goods","sort","prevGood","currGood","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA9BD,SACLC,EADK,GAGJ,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENK,EAAY,YAAOC,GAmBzB,OAjBIH,IAAaP,EAASM,MACxBG,EAAaE,MAAK,SAACC,EAAUC,GAC3B,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAASG,cAAcF,GAChC,KAAKb,EAASgB,OACZ,OAAOJ,EAASK,OAASJ,EAASI,OACpC,QACE,OAAO,MAKXb,GACFK,EAAaS,UAGRT,EAOcU,CAAkBlB,EAAiB,CACtDM,WACAH,eAoBF,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,IAAaP,EAASc,WAEtCS,QA3BiB,WACvBf,EAAYR,EAASc,WAmBjB,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAaP,EAASgB,SAEtCO,QAnCkB,WACxBf,EAAYR,EAASgB,SA2BjB,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAalB,IAEjBmB,QA3CmB,WACzBlB,GAAeD,IAmCX,qBAYEG,IAAaP,EAASM,MAAQF,EAE5B,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAjDS,WACnBf,EAAYR,EAASM,MACrBD,GAAc,IA4CN,mBAQA,QAGN,6BACGI,EAAae,KAAI,SAACC,GAAD,OAChB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCpInBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.119741c5.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((prevGood, currGood) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return prevGood.localeCompare(currGood);\n        case SortType.LENGTH:\n          return prevGood.length - currGood.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const visibleGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  const alphaSortHandler = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const lengthSortHandler = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseSortHandler = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const resetHandler = () => {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={alphaSortHandler}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={lengthSortHandler}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverseSortHandler}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n          ? (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={resetHandler}\n            >\n              Reset\n            </button>\n          )\n          : null}\n      </div>\n\n      <ul>\n        {visibleGoods.map((good) => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}